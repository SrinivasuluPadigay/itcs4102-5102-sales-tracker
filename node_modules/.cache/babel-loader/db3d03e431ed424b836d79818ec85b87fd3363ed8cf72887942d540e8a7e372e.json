{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twins\\\\Desktop\\\\spl_project\\\\Sales Tracker\\\\Sales Tracker\\\\sales-tracker\\\\src\\\\SalesContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SalesContext = /*#__PURE__*/createContext();\nexport const SalesProvider = ({\n  children\n}) => {\n  _s();\n  const [sales, setSales] = useState([]);\n  const [formData, setFormData] = useState({\n    itemName: '',\n    price: '',\n    date: '',\n    paymentMode: 'cash',\n    category: '',\n    editing: false,\n    id: null\n  });\n  const [todayTotals, setTodayTotals] = useState({\n    cash: 0,\n    card: 0\n  }); // New state for today's totals\n\n  useEffect(() => {\n    fetchSales();\n    fetchTodayTotals(); // New: Fetch today's totals on component mount\n  }, []);\n  const fetchSales = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/sales');\n      setSales(response.data);\n    } catch (error) {\n      console.error('Failed to fetch sales', error);\n    }\n  };\n  const addOrUpdateSale = async () => {\n    const submissionData = {\n      ...formData,\n      price: parseFloat(formData.price) || 0 // Ensure price is a float\n    };\n    const method = formData.editing ? 'put' : 'post';\n    const url = formData.editing ? `http://localhost:8080/sales/${formData.id}` : 'http://localhost:8080/sales';\n    try {\n      const response = await axios[method](url, submissionData);\n      fetchSales(); // Refetch all sales including the newly added/updated sale\n      fetchTodayTotals(); // Refetch today's totals after adding/updating a sale\n      setFormData({\n        itemName: '',\n        price: '',\n        date: '',\n        paymentMode: 'cash',\n        editing: false,\n        id: null\n      });\n    } catch (error) {\n      console.error('Failed to add/update sale', error);\n    }\n  };\n  const deleteSale = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/sales/${id}`);\n      fetchSales(); // Refetch sales after deletion\n      fetchTodayTotals(); // Refetch today's totals after deletion\n    } catch (error) {\n      console.error('Failed to delete sale', error);\n    }\n  };\n\n  // New function to fetch today's sales totals\n  const fetchTodayTotals = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/today-sales');\n      setTodayTotals(response.data);\n    } catch (error) {\n      console.error('Failed to fetch today\\'s totals', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SalesContext.Provider, {\n    value: {\n      sales,\n      formData,\n      setFormData,\n      addOrUpdateSale,\n      deleteSale,\n      todayTotals\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(SalesProvider, \"33cDPyD/dSdSVGxkoPJ/Jo003WM=\");\n_c = SalesProvider;\nvar _c;\n$RefreshReg$(_c, \"SalesProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","SalesContext","SalesProvider","children","_s","sales","setSales","formData","setFormData","itemName","price","date","paymentMode","category","editing","id","todayTotals","setTodayTotals","cash","card","fetchSales","fetchTodayTotals","response","get","data","error","console","addOrUpdateSale","submissionData","parseFloat","method","url","deleteSale","delete","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/twins/Desktop/spl_project/Sales Tracker/Sales Tracker/sales-tracker/src/SalesContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const SalesContext = createContext();\n\nexport const SalesProvider = ({ children }) => {\n    const [sales, setSales] = useState([]);\n    const [formData, setFormData] = useState({\n        itemName: '',\n        price: '',\n        date: '',\n        paymentMode: 'cash',\n        category: '',\n        editing: false,\n        id: null\n    });\n    const [todayTotals, setTodayTotals] = useState({ cash: 0, card: 0 }); // New state for today's totals\n\n    useEffect(() => {\n        fetchSales();\n        fetchTodayTotals(); // New: Fetch today's totals on component mount\n    }, []);\n\n    const fetchSales = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/sales');\n            setSales(response.data);\n        } catch (error) {\n            console.error('Failed to fetch sales', error);\n        }\n    };\n\n    const addOrUpdateSale = async () => {\n        const submissionData = {\n            ...formData,\n            price: parseFloat(formData.price) || 0  // Ensure price is a float\n        };\n        const method = formData.editing ? 'put' : 'post';\n        const url = formData.editing ? `http://localhost:8080/sales/${formData.id}` : 'http://localhost:8080/sales';\n        try {\n            const response = await axios[method](url, submissionData);\n            fetchSales();  // Refetch all sales including the newly added/updated sale\n            fetchTodayTotals();  // Refetch today's totals after adding/updating a sale\n            setFormData({\n                itemName: '',\n                price: '',\n                date: '',\n                paymentMode: 'cash',\n                editing: false,\n                id: null\n            });\n        } catch (error) {\n            console.error('Failed to add/update sale', error);\n        }\n    };\n\n    const deleteSale = async (id) => {\n        try {\n            await axios.delete(`http://localhost:8080/sales/${id}`);\n            fetchSales();  // Refetch sales after deletion\n            fetchTodayTotals();  // Refetch today's totals after deletion\n        } catch (error) {\n            console.error('Failed to delete sale', error);\n        }\n    };\n\n    // New function to fetch today's sales totals\n    const fetchTodayTotals = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/today-sales');\n            setTodayTotals(response.data);\n        } catch (error) {\n            console.error('Failed to fetch today\\'s totals', error);\n        }\n    };\n\n    return (\n        <SalesContext.Provider value={{ sales, formData, setFormData, addOrUpdateSale, deleteSale, todayTotals }}>\n            {children}\n        </SalesContext.Provider>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}