{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshreddymoramreddy/Desktop/UNCC/SEM_3/SPL/CodeX/Sales Tracker/sales-tracker/src/SalesContext.js\",\n  _s = $RefreshSig$();\n// import React, { createContext, useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// export const SalesContext = createContext();\n\n// export const SalesProvider = ({ children }) => {\n//     const [sales, setSales] = useState([]);\n//     const [formData, setFormData] = useState({\n//         itemName: '',\n//         price: '',\n//         date: '',\n//         paymentMode: 'cash',\n//         category: '',\n//         editing: false,\n//         id: null\n//     });\n\n//     useEffect(() => {\n//         fetchSales();\n//     }, []);\n\n//     const fetchSales = async () => {\n//         try {\n//             const response = await axios.get('http://localhost:8080/sales');\n//             setSales(response.data);\n//         } catch (error) {\n//             console.error('Failed to fetch sales', error);\n//         }\n//     };\n\n//     const addOrUpdateSale = async () => {\n//         const method = formData.editing ? 'put' : 'post';\n//         const url = formData.editing ? `http://localhost:8080/sales/${formData.id}` : 'http://localhost:8080/sales';\n//         try {\n//             const response = await axios[method](url, formData);\n//             fetchSales();\n//             setFormData({\n//                 itemName: '',\n//                 price: '',\n//                 date: '',\n//                 paymentMode: 'cash',\n//                 editing: false,\n//                 id: null\n//             });\n//         } catch (error) {\n//             console.error('Failed to add/update sale', error);\n//         }\n//     };\n\n//     const startEdit = (sale) => {\n//         setFormData({\n//             ...sale,\n//             editing: true\n//         });\n//     };\n\n//     const deleteSale = async (id) => {\n//         try {\n//             await axios.delete(`http://localhost:8080/sales/${id}`);\n//             fetchSales();\n//         } catch (error) {\n//             console.error('Failed to delete sale', error);\n//         }\n//     };\n\n//     return (\n//         <SalesContext.Provider value={{ sales, formData, setFormData, addOrUpdateSale, startEdit, deleteSale }}>\n//             {children}\n//         </SalesContext.Provider>\n//     );\n// };\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SalesContext = /*#__PURE__*/createContext();\nexport const SalesProvider = ({\n  children\n}) => {\n  _s();\n  const [sales, setSales] = useState([]);\n  const [filters, setFilters] = useState({\n    category: '',\n    priceRange: [0, 10000],\n    dates: [null, null],\n    // Expected format: [startDate, endDate]\n    paymentMode: ''\n  });\n  const [sort, setSort] = useState({\n    field: 'date',\n    order: 'desc'\n  });\n  useEffect(() => {\n    fetchSales();\n  }, [filters, sort]);\n  const fetchSales = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:8080/sales', {\n        params: {\n          ...filters,\n          sort\n        }\n      });\n      setSales(data);\n    } catch (error) {\n      console.error('Failed to fetch sales', error);\n    }\n  };\n  const updateFilters = (filterType, value) => {\n    setFilters({\n      ...filters,\n      [filterType]: value\n    });\n  };\n  const updateSort = field => {\n    const order = sort.field === field && sort.order === 'asc' ? 'desc' : 'asc';\n    setSort({\n      field,\n      order\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(SalesContext.Provider, {\n    value: {\n      sales,\n      setSales,\n      updateFilters,\n      updateSort,\n      filters,\n      sort\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(SalesProvider, \"Z5BzJXrEvxhWU4+Qx/a4u+8UhcQ=\");\n_c = SalesProvider;\nvar _c;\n$RefreshReg$(_c, \"SalesProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","SalesContext","SalesProvider","children","_s","sales","setSales","filters","setFilters","category","priceRange","dates","paymentMode","sort","setSort","field","order","fetchSales","data","get","params","error","console","updateFilters","filterType","value","updateSort","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rakeshreddymoramreddy/Desktop/UNCC/SEM_3/SPL/CodeX/Sales Tracker/sales-tracker/src/SalesContext.js"],"sourcesContent":["// import React, { createContext, useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// export const SalesContext = createContext();\n\n// export const SalesProvider = ({ children }) => {\n//     const [sales, setSales] = useState([]);\n//     const [formData, setFormData] = useState({\n//         itemName: '',\n//         price: '',\n//         date: '',\n//         paymentMode: 'cash',\n//         category: '',\n//         editing: false,\n//         id: null\n//     });\n\n//     useEffect(() => {\n//         fetchSales();\n//     }, []);\n\n//     const fetchSales = async () => {\n//         try {\n//             const response = await axios.get('http://localhost:8080/sales');\n//             setSales(response.data);\n//         } catch (error) {\n//             console.error('Failed to fetch sales', error);\n//         }\n//     };\n\n//     const addOrUpdateSale = async () => {\n//         const method = formData.editing ? 'put' : 'post';\n//         const url = formData.editing ? `http://localhost:8080/sales/${formData.id}` : 'http://localhost:8080/sales';\n//         try {\n//             const response = await axios[method](url, formData);\n//             fetchSales();\n//             setFormData({\n//                 itemName: '',\n//                 price: '',\n//                 date: '',\n//                 paymentMode: 'cash',\n//                 editing: false,\n//                 id: null\n//             });\n//         } catch (error) {\n//             console.error('Failed to add/update sale', error);\n//         }\n//     };\n\n//     const startEdit = (sale) => {\n//         setFormData({\n//             ...sale,\n//             editing: true\n//         });\n//     };\n\n//     const deleteSale = async (id) => {\n//         try {\n//             await axios.delete(`http://localhost:8080/sales/${id}`);\n//             fetchSales();\n//         } catch (error) {\n//             console.error('Failed to delete sale', error);\n//         }\n//     };\n\n//     return (\n//         <SalesContext.Provider value={{ sales, formData, setFormData, addOrUpdateSale, startEdit, deleteSale }}>\n//             {children}\n//         </SalesContext.Provider>\n//     );\n// };\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const SalesContext = createContext();\n\nexport const SalesProvider = ({ children }) => {\n    const [sales, setSales] = useState([]);\n    const [filters, setFilters] = useState({\n        category: '',\n        priceRange: [0, 10000],\n        dates: [null, null],  // Expected format: [startDate, endDate]\n        paymentMode: '',\n    });\n    const [sort, setSort] = useState({ field: 'date', order: 'desc' });\n\n    useEffect(() => {\n        fetchSales();\n    }, [filters, sort]);\n\n    const fetchSales = async () => {\n        try {\n            const { data } = await axios.get('http://localhost:8080/sales', {\n                params: { ...filters, sort }\n            });\n            setSales(data);\n        } catch (error) {\n            console.error('Failed to fetch sales', error);\n        }\n    };\n\n    const updateFilters = (filterType, value) => {\n        setFilters({ ...filters, [filterType]: value });\n    };\n\n    const updateSort = (field) => {\n        const order = sort.field === field && sort.order === 'asc' ? 'desc' : 'asc';\n        setSort({ field, order });\n    };\n\n    return (\n        <SalesContext.Provider value={{\n            sales, setSales, updateFilters, updateSort, filters, sort\n        }}>\n            {children}\n        </SalesContext.Provider>\n    );\n};\n\n\n"],"mappings":";;AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC;IACnCa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC;IACtBC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;IAAG;IACtBC,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC;IAAEmB,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,CAAC;EAElEnB,SAAS,CAAC,MAAM;IACZoB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACV,OAAO,EAAEM,IAAI,CAAC,CAAC;EAEnB,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,6BAA6B,EAAE;QAC5DC,MAAM,EAAE;UAAE,GAAGb,OAAO;UAAEM;QAAK;MAC/B,CAAC,CAAC;MACFP,QAAQ,CAACY,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,MAAME,aAAa,GAAGA,CAACC,UAAU,EAAEC,KAAK,KAAK;IACzCjB,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAE,CAACiB,UAAU,GAAGC;IAAM,CAAC,CAAC;EACnD,CAAC;EAED,MAAMC,UAAU,GAAIX,KAAK,IAAK;IAC1B,MAAMC,KAAK,GAAGH,IAAI,CAACE,KAAK,KAAKA,KAAK,IAAIF,IAAI,CAACG,KAAK,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK;IAC3EF,OAAO,CAAC;MAAEC,KAAK;MAAEC;IAAM,CAAC,CAAC;EAC7B,CAAC;EAED,oBACIhB,OAAA,CAACC,YAAY,CAAC0B,QAAQ;IAACF,KAAK,EAAE;MAC1BpB,KAAK;MAAEC,QAAQ;MAAEiB,aAAa;MAAEG,UAAU;MAAEnB,OAAO;MAAEM;IACzD,CAAE;IAAAV,QAAA,EACGA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAAC3B,EAAA,CAzCWF,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}