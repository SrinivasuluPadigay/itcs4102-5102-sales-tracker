{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshreddymoramreddy/Desktop/UNCC/SEM_3/SPL/CodeX/Sales Tracker/sales-tracker/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nfunction App() {\n  const [sales, setSales] = useState([]); // Ensure initial state is always an array\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchSales();\n  }, []);\n  const fetchSales = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:8080/sales');\n      if (Array.isArray(response.data)) {\n        // Double-check that response.data is an array\n        setSales(response.data);\n      } else {\n        console.error('Received data is not an array:', response.data);\n        setError('Received data format is incorrect, expected an array');\n      }\n    } catch (err) {\n      setError('Error fetching sales');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addSale = async () => {\n    const newSale = {\n      itemName: \"New Item\",\n      price: 100,\n      date: new Date().toISOString().split('T')[0],\n      amount: 1,\n      paymentMode: \"card\"\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/sales', newSale);\n      if (response.status === 201) {\n        // Check if the sale was successfully created\n        fetchSales(); // Reload sales to include the new one\n      }\n    } catch (err) {\n      console.error('Error adding sale', err);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Sales Tracker\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addSale,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, loading ? 'Adding...' : 'Add Sale'), error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, sales.map(sale =>\n  /*#__PURE__*/\n  // This map is safe as we ensure sales is always an array\n  React.createElement(\"li\", {\n    key: sale.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, sale.itemName, \" - $\", sale.price, \" - \", sale.date))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","axios","App","sales","setSales","loading","setLoading","error","setError","fetchSales","response","get","Array","isArray","data","console","err","addSale","newSale","itemName","price","date","Date","toISOString","split","amount","paymentMode","post","status","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","sale","key","id"],"sources":["/Users/rakeshreddymoramreddy/Desktop/UNCC/SEM_3/SPL/CodeX/Sales Tracker/sales-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n    const [sales, setSales] = useState([]);  // Ensure initial state is always an array\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetchSales();\n    }, []);\n\n    const fetchSales = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await axios.get('http://localhost:8080/sales');\n            if (Array.isArray(response.data)) { // Double-check that response.data is an array\n                setSales(response.data);\n            } else {\n                console.error('Received data is not an array:', response.data);\n                setError('Received data format is incorrect, expected an array');\n            }\n        } catch (err) {\n            setError('Error fetching sales');\n            console.error(err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const addSale = async () => {\n        const newSale = { itemName: \"New Item\", price: 100, date: new Date().toISOString().split('T')[0], amount: 1, paymentMode: \"card\" };\n        try {\n            const response = await axios.post('http://localhost:8080/sales', newSale);\n            if (response.status === 201) { // Check if the sale was successfully created\n                fetchSales(); // Reload sales to include the new one\n            }\n        } catch (err) {\n            console.error('Error adding sale', err);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Sales Tracker</h1>\n            <button onClick={addSale} disabled={loading}>{loading ? 'Adding...' : 'Add Sale'}</button>\n            {error && <p>{error}</p>}\n            <ul>\n                {sales.map(sale => (  // This map is safe as we ensure sales is always an array\n                    <li key={sale.id}>{sale.itemName} - ${sale.price} - {sale.date}</li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}