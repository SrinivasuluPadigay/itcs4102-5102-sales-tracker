{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twins\\\\Desktop\\\\spl_project\\\\Sales Tracker\\\\Sales Tracker\\\\sales-tracker\\\\src\\\\SaleList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { List, ListItem, ListItemText, IconButton, Typography, Divider, Paper } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { SalesContext } from './SalesContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SaleList() {\n  _s();\n  const {\n    sales,\n    todayTotals,\n    startEdit,\n    deleteSale\n  } = useContext(SalesContext);\n  if (!sales) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"No sales data available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 24\n  }, this);\n\n  // Function to group and sort sales by date\n  const groupedSales = sales.reduce((acc, sale) => {\n    const date = sale.date;\n    acc[date] = acc[date] || [];\n    acc[date].push(sale);\n    return acc;\n  }, {});\n  const sortedDates = Object.keys(groupedSales).sort((a, b) => new Date(b) - new Date(a));\n  return /*#__PURE__*/_jsxDEV(List, {\n    sx: {\n      width: '100%',\n      mt: 4\n    },\n    children: sortedDates.map(date => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        sx: {\n          my: 2,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          sx: {\n            mb: 2\n          },\n          children: [\"Sales on \", date, date === today &&\n          /*#__PURE__*/\n          // Check if the date is today's date\n          _jsxDEV(_Fragment, {\n            children: [' | ', /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cash Sales:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 37\n            }, this), \" $\", todayTotals.cash.toFixed(2), ' | ', /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Card Sales:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this), \" $\", todayTotals.card.toFixed(2)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), groupedSales[date].map(sale => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => startEdit(sale),\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 81\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => deleteSale(sale.id),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 85\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true),\n          sx: {\n            mb: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${sale.itemName} - $${sale.price}`,\n            secondary: `Category: ${sale.category} | Date: ${sale.date} | Payment Mode: ${sale.paymentMode}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, sale.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, date, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(SaleList, \"JPXbs4LDVOPe1tBYPSvSq4brj9o=\");\n_c = SaleList;\nexport default SaleList;\nvar _c;\n$RefreshReg$(_c, \"SaleList\");","map":{"version":3,"names":["React","useContext","List","ListItem","ListItemText","IconButton","Typography","Divider","Paper","EditIcon","DeleteIcon","SalesContext","jsxDEV","_jsxDEV","Fragment","_Fragment","SaleList","_s","sales","todayTotals","startEdit","deleteSale","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedSales","reduce","acc","sale","date","push","sortedDates","Object","keys","sort","a","b","Date","sx","width","mt","map","elevation","my","p","variant","color","mb","today","cash","toFixed","card","secondaryAction","onClick","id","primary","itemName","price","secondary","category","paymentMode","_c","$RefreshReg$"],"sources":["C:/Users/twins/Desktop/spl_project/Sales Tracker/Sales Tracker/sales-tracker/src/SaleList.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { List, ListItem, ListItemText, IconButton, Typography, Divider, Paper } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { SalesContext } from './SalesContext';\n\nfunction SaleList() {\n    const { sales, todayTotals, startEdit, deleteSale } = useContext(SalesContext);\n    if (!sales) return <Typography>No sales data available.</Typography>;\n\n    // Function to group and sort sales by date\n    const groupedSales = sales.reduce((acc, sale) => {\n        const date = sale.date;\n        acc[date] = acc[date] || [];\n        acc[date].push(sale);\n        return acc;\n    }, {});\n\n    const sortedDates = Object.keys(groupedSales).sort((a, b) => new Date(b) - new Date(a));\n\n    return (\n        <List sx={{ width: '100%', mt: 4 }}>\n            {sortedDates.map(date => (\n                <React.Fragment key={date}>\n                    <Paper elevation={2} sx={{ my: 2, p: 2 }}>\n                        <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 2 }}>\n                            Sales on {date}\n                            {date === today && ( // Check if the date is today's date\n                                <>\n                                    {' | '}\n                                    <strong>Cash Sales:</strong> ${todayTotals.cash.toFixed(2)}\n                                    {' | '}\n                                    <strong>Card Sales:</strong> ${todayTotals.card.toFixed(2)}\n                                </>\n                            )}\n                        </Typography>\n                        <Divider sx={{ mb: 2 }} />\n                        {groupedSales[date].map(sale => (\n                        <ListItem \n                            key={sale.id} \n                            secondaryAction={\n                                <>\n                                    <IconButton onClick={() => startEdit(sale)}><EditIcon /></IconButton>\n                                    <IconButton onClick={() => deleteSale(sale.id)}><DeleteIcon /></IconButton>\n                                </>\n                            }\n                            sx={{ mb: 1 }}\n                        >\n                        <ListItemText\n                            primary={`${sale.itemName} - $${sale.price}`}\n                            secondary={`Category: ${sale.category} | Date: ${sale.date} | Payment Mode: ${sale.paymentMode}`}\n                        />\n                        </ListItem>\n                    ))}\n\n                    </Paper>\n                </React.Fragment>\n            ))}\n        </List>\n    );\n}\n\nexport default SaleList;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}