{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshreddymoramreddy/Desktop/UNCC/SEM_3/SPL/CodeX/Sales Tracker/sales-tracker/src/SaleList.js\",\n  _s = $RefreshSig$();\n// import React, { useContext } from 'react';\n// import { List, ListItem, ListItemText, IconButton, Typography, Divider, Paper } from '@mui/material';\n// import EditIcon from '@mui/icons-material/Edit';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import { SalesContext } from './SalesContext';\n\n// function SaleList() {\n//     const { sales, startEdit, deleteSale } = useContext(SalesContext);\n\n//     // Function to group and sort sales by date\n//     const groupedSales = sales.reduce((acc, sale) => {\n//         const date = sale.date;\n//         acc[date] = acc[date] || [];\n//         acc[date].push(sale);\n//         return acc;\n//     }, {});\n\n//     const sortedDates = Object.keys(groupedSales).sort((a, b) => new Date(b) - new Date(a));\n\n//     return (\n//         <List sx={{ width: '100%', mt: 4 }}>\n//             {sortedDates.map(date => (\n//                 <React.Fragment key={date}>\n//                     <Paper elevation={2} sx={{ my: 2, p: 2 }}>\n//                         <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 2 }}>\n//                             Sales on {date}\n//                         </Typography>\n//                         <Divider sx={{ mb: 2 }} />\n//                         {groupedSales[date].map(sale => (\n//                         <ListItem \n//                             key={sale.id} \n//                             secondaryAction={\n//                                 <>\n//                                     <IconButton onClick={() => startEdit(sale)}><EditIcon /></IconButton>\n//                                     <IconButton onClick={() => deleteSale(sale.id)}><DeleteIcon /></IconButton>\n//                                 </>\n//                             }\n//                             sx={{ mb: 1 }}\n//                         >\n//                         <ListItemText\n//                             primary={`${sale.itemName} - $${sale.price}`}\n//                         secondary={`Category: ${sale.category} | Date: ${sale.date} | Payment Mode: ${sale.paymentMode}`}\n//                         />\n//                         </ListItem>\n//                     ))}\n\n//                     </Paper>\n//                 </React.Fragment>\n//             ))}\n//         </List>\n//     );\n// }\n\n// export default SaleList;\n\nimport React, { useContext } from 'react';\nimport { Typography, Paper, TextField, Button, MenuItem, Select, FormControl, InputLabel } from '@mui/material';\nimport { SalesContext } from './SalesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SaleList() {\n  _s();\n  const {\n    sales,\n    updateFilters,\n    updateSort,\n    filters,\n    sort\n  } = useContext(SalesContext);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: '20px',\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Sales List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      margin: \"normal\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: filters.category,\n        onChange: e => updateFilters('category', e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Clothes\",\n          children: \"Clothes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Jewelry\",\n          children: \"Jewelry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Bag\",\n          children: \"Bag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Stationary\",\n          children: \"Stationary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => updateSort('date'),\n      children: [\"Sort by Date \", sort.field === 'date' && (sort.order === 'asc' ? '↑' : '↓')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => updateSort('price'),\n      children: [\"Sort by Price \", sort.field === 'price' && (sort.order === 'asc' ? '↑' : '↓')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(SaleList, \"frrLqR3pnT/tw+9FFpTsk9AAUv0=\");\n_c = SaleList;\nexport default SaleList;\nvar _c;\n$RefreshReg$(_c, \"SaleList\");","map":{"version":3,"names":["React","useContext","Typography","Paper","TextField","Button","MenuItem","Select","FormControl","InputLabel","SalesContext","jsxDEV","_jsxDEV","SaleList","_s","sales","updateFilters","updateSort","filters","sort","style","padding","marginTop","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","margin","value","category","onChange","e","target","onClick","field","order","_c","$RefreshReg$"],"sources":["/Users/rakeshreddymoramreddy/Desktop/UNCC/SEM_3/SPL/CodeX/Sales Tracker/sales-tracker/src/SaleList.js"],"sourcesContent":["\n// import React, { useContext } from 'react';\n// import { List, ListItem, ListItemText, IconButton, Typography, Divider, Paper } from '@mui/material';\n// import EditIcon from '@mui/icons-material/Edit';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import { SalesContext } from './SalesContext';\n\n// function SaleList() {\n//     const { sales, startEdit, deleteSale } = useContext(SalesContext);\n\n//     // Function to group and sort sales by date\n//     const groupedSales = sales.reduce((acc, sale) => {\n//         const date = sale.date;\n//         acc[date] = acc[date] || [];\n//         acc[date].push(sale);\n//         return acc;\n//     }, {});\n\n//     const sortedDates = Object.keys(groupedSales).sort((a, b) => new Date(b) - new Date(a));\n\n//     return (\n//         <List sx={{ width: '100%', mt: 4 }}>\n//             {sortedDates.map(date => (\n//                 <React.Fragment key={date}>\n//                     <Paper elevation={2} sx={{ my: 2, p: 2 }}>\n//                         <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 2 }}>\n//                             Sales on {date}\n//                         </Typography>\n//                         <Divider sx={{ mb: 2 }} />\n//                         {groupedSales[date].map(sale => (\n//                         <ListItem \n//                             key={sale.id} \n//                             secondaryAction={\n//                                 <>\n//                                     <IconButton onClick={() => startEdit(sale)}><EditIcon /></IconButton>\n//                                     <IconButton onClick={() => deleteSale(sale.id)}><DeleteIcon /></IconButton>\n//                                 </>\n//                             }\n//                             sx={{ mb: 1 }}\n//                         >\n//                         <ListItemText\n//                             primary={`${sale.itemName} - $${sale.price}`}\n//                         secondary={`Category: ${sale.category} | Date: ${sale.date} | Payment Mode: ${sale.paymentMode}`}\n//                         />\n//                         </ListItem>\n//                     ))}\n\n//                     </Paper>\n//                 </React.Fragment>\n//             ))}\n//         </List>\n//     );\n// }\n\n// export default SaleList;\n\n\n\nimport React, { useContext } from 'react';\nimport { Typography, Paper, TextField, Button, MenuItem, Select, FormControl, InputLabel } from '@mui/material';\nimport { SalesContext } from './SalesContext';\n\nfunction SaleList() {\n    const { sales, updateFilters, updateSort, filters, sort } = useContext(SalesContext);\n\n    return (\n        <Paper style={{ padding: '20px', marginTop: '20px' }}>\n            <Typography variant=\"h5\">Sales List</Typography>\n            <FormControl fullWidth margin=\"normal\">\n                <InputLabel>Category</InputLabel>\n                <Select\n                    value={filters.category}\n                    onChange={e => updateFilters('category', e.target.value)}\n                >\n                    <MenuItem value=\"\">All</MenuItem>\n                    <MenuItem value=\"Clothes\">Clothes</MenuItem>\n                    <MenuItem value=\"Jewelry\">Jewelry</MenuItem>\n                    <MenuItem value=\"Bag\">Bag</MenuItem>\n                    <MenuItem value=\"Stationary\">Stationary</MenuItem>\n                </Select>\n            </FormControl>\n            <Button onClick={() => updateSort('date')}>Sort by Date {sort.field === 'date' && (sort.order === 'asc' ? '↑' : '↓')}</Button>\n            <Button onClick={() => updateSort('price')}>Sort by Price {sort.field === 'price' && (sort.order === 'asc' ? '↑' : '↓')}</Button>\n            {/* Implement additional UI elements for other filters and sorting options as needed */}\n        </Paper>\n    );\n}\n\nexport default SaleList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}