{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshreddymoramreddy/Desktop/UNCC/SEM_3/SPL/CodeX/Sales Tracker/sales-tracker/src/SalesList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { SalesContext } from './SalesContext';\nimport { Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SalesList() {\n  _s();\n  const {\n    sales\n  } = useContext(SalesContext);\n\n  // Function to group sales by date\n  const groupSalesByDate = sales => {\n    return sales.reduce((groups, sale) => {\n      const date = sale.date.split('T')[0]; // Assuming date is in ISO format, adjust as needed\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(sale);\n      return groups;\n    }, {});\n  };\n\n  // Function to sort dates\n  const sortDates = dates => {\n    return dates.sort((a, b) => new Date(b) - new Date(a)); // Sort dates descending\n  };\n\n  // Group and sort sales\n  const groupedSales = groupSalesByDate(sales);\n  const sortedDates = sortDates(Object.keys(groupedSales));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: sortedDates.map(date => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mt: 2,\n          mb: 1\n        },\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: groupedSales[date].map(sale => /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: sale.itemName,\n            secondary: `$${sale.price} - ${sale.paymentMode.toUpperCase()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)\n        }, sale.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        light: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(SalesList, \"Rfl6U9vDp7icX3roprYzwuqJHv8=\");\n_c = SalesList;\nexport default SalesList;\nvar _c;\n$RefreshReg$(_c, \"SalesList\");","map":{"version":3,"names":["React","useContext","SalesContext","Typography","List","ListItem","ListItemText","Divider","jsxDEV","_jsxDEV","SalesList","_s","sales","groupSalesByDate","reduce","groups","sale","date","split","push","sortDates","dates","sort","a","b","Date","groupedSales","sortedDates","Object","keys","children","map","Fragment","variant","sx","mt","mb","fileName","_jsxFileName","lineNumber","columnNumber","divider","primary","itemName","secondary","price","paymentMode","toUpperCase","id","light","_c","$RefreshReg$"],"sources":["/Users/rakeshreddymoramreddy/Desktop/UNCC/SEM_3/SPL/CodeX/Sales Tracker/sales-tracker/src/SalesList.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { SalesContext } from './SalesContext';\nimport { Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\n\nfunction SalesList() {\n    const { sales } = useContext(SalesContext);\n\n    // Function to group sales by date\n    const groupSalesByDate = (sales) => {\n        return sales.reduce((groups, sale) => {\n            const date = sale.date.split('T')[0]; // Assuming date is in ISO format, adjust as needed\n            if (!groups[date]) {\n                groups[date] = [];\n            }\n            groups[date].push(sale);\n            return groups;\n        }, {});\n    };\n\n    // Function to sort dates\n    const sortDates = (dates) => {\n        return dates.sort((a, b) => new Date(b) - new Date(a)); // Sort dates descending\n    };\n\n    // Group and sort sales\n    const groupedSales = groupSalesByDate(sales);\n    const sortedDates = sortDates(Object.keys(groupedSales));\n\n    return (\n        <div>\n            {sortedDates.map(date => (\n                <React.Fragment key={date}>\n                    <Typography variant=\"h6\" sx={{ mt: 2, mb: 1 }}>\n                        {date}\n                    </Typography>\n                    <List>\n                        {groupedSales[date].map(sale => (\n                            <ListItem key={sale.id} divider>\n                                <ListItemText\n                                    primary={sale.itemName}\n                                    secondary={`$${sale.price} - ${sale.paymentMode.toUpperCase()}`}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider light />\n                </React.Fragment>\n            ))}\n        </div>\n    );\n}\n\nexport default SalesList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}