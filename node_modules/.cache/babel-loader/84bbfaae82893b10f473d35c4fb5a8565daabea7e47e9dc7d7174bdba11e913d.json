{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshreddymoramreddy/Desktop/UNCC/SEM_3/SPL/CodeX/Sales Tracker/sales-tracker/src/SalesContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SalesContext = /*#__PURE__*/createContext();\nexport const SalesProvider = ({\n  children\n}) => {\n  _s();\n  const [sales, setSales] = useState([]);\n  const [formData, setFormData] = useState({\n    itemName: '',\n    price: '',\n    date: '',\n    paymentMode: 'cash',\n    category: '',\n    editing: false,\n    id: null\n  });\n  useEffect(() => {\n    fetchSales();\n  }, []);\n  const [todaySalesSummary, setTodaySalesSummary] = useState([]);\n  const fetchTodaySalesSummary = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/sales/today/summary');\n      console.log(\"Received data:\", response.data); // Debugging log\n      if (response.data) {\n        setTodaySalesSummary(response.data);\n      } else {\n        throw new Error(\"No data received from API\");\n      }\n    } catch (error) {\n      console.error('Failed to fetch today\\'s sales summary', error);\n      setTodaySalesSummary([]); // Ensure state is updated even on error to stop loading message\n    }\n  };\n  useEffect(() => {\n    fetchTodaySalesSummary();\n  }, []); // Ensure the dependency array is correct, typically empty for a load-once operation\n\n  const fetchSales = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/sales');\n      setSales(response.data);\n    } catch (error) {\n      console.error('Failed to fetch sales', error);\n    }\n  };\n  const addOrUpdateSale = async () => {\n    const method = formData.editing ? 'put' : 'post';\n    const url = formData.editing ? `http://localhost:8080/sales/${formData.id}` : 'http://localhost:8080/sales';\n    try {\n      const response = await axios[method](url, formData);\n      fetchSales();\n      setFormData({\n        itemName: '',\n        price: '',\n        date: '',\n        paymentMode: 'cash',\n        editing: false,\n        id: null\n      });\n    } catch (error) {\n      console.error('Failed to add/update sale', error);\n    }\n  };\n  const startEdit = sale => {\n    setFormData({\n      ...sale,\n      editing: true\n    });\n  };\n  const deleteSale = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/sales/${id}`);\n      fetchSales();\n    } catch (error) {\n      console.error('Failed to delete sale', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SalesContext.Provider, {\n    value: {\n      sales,\n      formData,\n      setFormData,\n      addOrUpdateSale,\n      startEdit,\n      deleteSale\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(SalesProvider, \"ju3uBj+bq5cwqqDokRW5/n5+7h8=\");\n_c = SalesProvider;\nvar _c;\n$RefreshReg$(_c, \"SalesProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","SalesContext","SalesProvider","children","_s","sales","setSales","formData","setFormData","itemName","price","date","paymentMode","category","editing","id","fetchSales","todaySalesSummary","setTodaySalesSummary","fetchTodaySalesSummary","response","get","console","log","data","Error","error","addOrUpdateSale","method","url","startEdit","sale","deleteSale","delete","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rakeshreddymoramreddy/Desktop/UNCC/SEM_3/SPL/CodeX/Sales Tracker/sales-tracker/src/SalesContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const SalesContext = createContext();\n\nexport const SalesProvider = ({ children }) => {\n    const [sales, setSales] = useState([]);\n    const [formData, setFormData] = useState({\n        itemName: '',\n        price: '',\n        date: '',\n        paymentMode: 'cash',\n        category: '',\n        editing: false,\n        id: null\n    });\n\n    useEffect(() => {\n        fetchSales();\n    }, []);\n\nconst [todaySalesSummary, setTodaySalesSummary] = useState([]);\n\nconst fetchTodaySalesSummary = async () => {\n    try {\n        const response = await axios.get('http://localhost:8080/sales/today/summary');\n        console.log(\"Received data:\", response.data);  // Debugging log\n        if (response.data) {\n            setTodaySalesSummary(response.data);\n        } else {\n            throw new Error(\"No data received from API\");\n        }\n    } catch (error) {\n        console.error('Failed to fetch today\\'s sales summary', error);\n        setTodaySalesSummary([]);  // Ensure state is updated even on error to stop loading message\n    }\n};\n\n\nuseEffect(() => {\n    fetchTodaySalesSummary();\n}, []);  // Ensure the dependency array is correct, typically empty for a load-once operation\n\n\n\n    const fetchSales = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/sales');\n            setSales(response.data);\n        } catch (error) {\n            console.error('Failed to fetch sales', error);\n        }\n    };\n\n    const addOrUpdateSale = async () => {\n        const method = formData.editing ? 'put' : 'post';\n        const url = formData.editing ? `http://localhost:8080/sales/${formData.id}` : 'http://localhost:8080/sales';\n        try {\n            const response = await axios[method](url, formData);\n            fetchSales();\n            setFormData({\n                itemName: '',\n                price: '',\n                date: '',\n                paymentMode: 'cash',\n                editing: false,\n                id: null\n            });\n        } catch (error) {\n            console.error('Failed to add/update sale', error);\n        }\n    };\n\n    const startEdit = (sale) => {\n        setFormData({\n            ...sale,\n            editing: true\n        });\n    };\n\n    const deleteSale = async (id) => {\n        try {\n            await axios.delete(`http://localhost:8080/sales/${id}`);\n            fetchSales();\n        } catch (error) {\n            console.error('Failed to delete sale', error);\n        }\n    };\n\n    return (\n        <SalesContext.Provider value={{ sales, formData, setFormData, addOrUpdateSale, startEdit, deleteSale }}>\n            {children}\n        </SalesContext.Provider>\n    );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACrCa,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,MAAM;IACnBC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,EAAE,EAAE;EACR,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACZmB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEV,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMuB,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,2CAA2C,CAAC;MAC7EC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAE;MAC/C,IAAIJ,QAAQ,CAACI,IAAI,EAAE;QACfN,oBAAoB,CAACE,QAAQ,CAACI,IAAI,CAAC;MACvC,CAAC,MAAM;QACH,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9DR,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAE;IAC/B;EACJ,CAAC;EAGDrB,SAAS,CAAC,MAAM;IACZsB,sBAAsB,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAIL,MAAMH,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,6BAA6B,CAAC;MAC/Df,QAAQ,CAACc,QAAQ,CAACI,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,MAAM,GAAGrB,QAAQ,CAACO,OAAO,GAAG,KAAK,GAAG,MAAM;IAChD,MAAMe,GAAG,GAAGtB,QAAQ,CAACO,OAAO,GAAI,+BAA8BP,QAAQ,CAACQ,EAAG,EAAC,GAAG,6BAA6B;IAC3G,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMtB,KAAK,CAAC8B,MAAM,CAAC,CAACC,GAAG,EAAEtB,QAAQ,CAAC;MACnDS,UAAU,CAAC,CAAC;MACZR,WAAW,CAAC;QACRC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,MAAM;QACnBE,OAAO,EAAE,KAAK;QACdC,EAAE,EAAE;MACR,CAAC,CAAC;IACN,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAED,MAAMI,SAAS,GAAIC,IAAI,IAAK;IACxBvB,WAAW,CAAC;MACR,GAAGuB,IAAI;MACPjB,OAAO,EAAE;IACb,CAAC,CAAC;EACN,CAAC;EAED,MAAMkB,UAAU,GAAG,MAAOjB,EAAE,IAAK;IAC7B,IAAI;MACA,MAAMjB,KAAK,CAACmC,MAAM,CAAE,+BAA8BlB,EAAG,EAAC,CAAC;MACvDC,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,oBACI1B,OAAA,CAACC,YAAY,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAAE9B,KAAK;MAAEE,QAAQ;MAAEC,WAAW;MAAEmB,eAAe;MAAEG,SAAS;MAAEE;IAAW,CAAE;IAAA7B,QAAA,EAClGA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACnC,EAAA,CAzFWF,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}