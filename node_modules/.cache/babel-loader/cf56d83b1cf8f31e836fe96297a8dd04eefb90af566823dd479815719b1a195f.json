{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshreddymoramreddy/Desktop/UNCC/SEM_3/SPL/CodeX/Sales Tracker/sales-tracker/src/SaleList.js\",\n  _s = $RefreshSig$();\n// import React, { useContext } from 'react';\n// import { List, ListItem, ListItemText, IconButton, Typography, Divider, Paper } from '@mui/material';\n// import EditIcon from '@mui/icons-material/Edit';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import { SalesContext } from './SalesContext';\n\n// function SaleList() {\n//     const { sales, startEdit, deleteSale } = useContext(SalesContext);\n\n//     // Function to group and sort sales by date\n//     const groupedSales = sales.reduce((acc, sale) => {\n//         const date = sale.date;\n//         acc[date] = acc[date] || [];\n//         acc[date].push(sale);\n//         return acc;\n//     }, {});\n\n//     const sortedDates = Object.keys(groupedSales).sort((a, b) => new Date(b) - new Date(a));\n\n//     return (\n//         <List sx={{ width: '100%', mt: 4 }}>\n//             {sortedDates.map(date => (\n//                 <React.Fragment key={date}>\n//                     <Paper elevation={2} sx={{ my: 2, p: 2 }}>\n//                         <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 2 }}>\n//                             Sales on {date}\n//                         </Typography>\n//                         <Divider sx={{ mb: 2 }} />\n//                         {groupedSales[date].map(sale => (\n//                         <ListItem \n//                             key={sale.id} \n//                             secondaryAction={\n//                                 <>\n//                                     <IconButton onClick={() => startEdit(sale)}><EditIcon /></IconButton>\n//                                     <IconButton onClick={() => deleteSale(sale.id)}><DeleteIcon /></IconButton>\n//                                 </>\n//                             }\n//                             sx={{ mb: 1 }}\n//                         >\n//                         <ListItemText\n//                             primary={`${sale.itemName} - $${sale.price}`}\n//                         secondary={`Category: ${sale.category} | Date: ${sale.date} | Payment Mode: ${sale.paymentMode}`}\n//                         />\n//                         </ListItem>\n//                     ))}\n\n//                     </Paper>\n//                 </React.Fragment>\n//             ))}\n//         </List>\n//     );\n// }\n\n// export default SaleList;\n\nimport React, { useContext } from 'react';\nimport { List, ListItem, ListItemText, IconButton, Typography, Divider, Paper } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { SalesContext } from './SalesContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SaleList() {\n  _s();\n  const {\n    sales\n  } = useContext(SalesContext);\n\n  // Function to group and sort sales by date\n  const groupedSales = sales.reduce((acc, sale) => {\n    const date = sale.date;\n    if (!acc[date]) {\n      acc[date] = [];\n    }\n    acc[date].push(sale);\n    return acc;\n  }, {});\n  const sortedDates = Object.keys(groupedSales).sort((a, b) => new Date(b) - new Date(a));\n  if (!sales || sales.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No sales data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(List, {\n    sx: {\n      width: '100%',\n      bgcolor: 'background.paper'\n    },\n    children: sortedDates.map(date => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mt: 4,\n          mb: 2\n        },\n        children: [\"Sales on \", date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), groupedSales[date].map(sale => /*#__PURE__*/_jsxDEV(ListItem, {\n        secondaryAction: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"edit\",\n            onClick: () => startEdit(sale),\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            onClick: () => deleteSale(sale.id),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `${sale.itemName} - $${sale.price}`,\n          secondary: `Category: ${sale.category || 'Not specified'} | Payment Mode: ${sale.paymentMode}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)\n      }, sale.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this))]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(SaleList, \"Rfl6U9vDp7icX3roprYzwuqJHv8=\");\n_c = SaleList;\nexport default SaleList;\nvar _c;\n$RefreshReg$(_c, \"SaleList\");","map":{"version":3,"names":["React","useContext","List","ListItem","ListItemText","IconButton","Typography","Divider","Paper","EditIcon","DeleteIcon","SalesContext","jsxDEV","_jsxDEV","Fragment","_Fragment","SaleList","_s","sales","groupedSales","reduce","acc","sale","date","push","sortedDates","Object","keys","sort","a","b","Date","length","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","bgcolor","map","variant","mt","mb","secondaryAction","edge","onClick","startEdit","deleteSale","id","primary","itemName","price","secondary","category","paymentMode","_c","$RefreshReg$"],"sources":["/Users/rakeshreddymoramreddy/Desktop/UNCC/SEM_3/SPL/CodeX/Sales Tracker/sales-tracker/src/SaleList.js"],"sourcesContent":["\n// import React, { useContext } from 'react';\n// import { List, ListItem, ListItemText, IconButton, Typography, Divider, Paper } from '@mui/material';\n// import EditIcon from '@mui/icons-material/Edit';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import { SalesContext } from './SalesContext';\n\n// function SaleList() {\n//     const { sales, startEdit, deleteSale } = useContext(SalesContext);\n\n//     // Function to group and sort sales by date\n//     const groupedSales = sales.reduce((acc, sale) => {\n//         const date = sale.date;\n//         acc[date] = acc[date] || [];\n//         acc[date].push(sale);\n//         return acc;\n//     }, {});\n\n//     const sortedDates = Object.keys(groupedSales).sort((a, b) => new Date(b) - new Date(a));\n\n//     return (\n//         <List sx={{ width: '100%', mt: 4 }}>\n//             {sortedDates.map(date => (\n//                 <React.Fragment key={date}>\n//                     <Paper elevation={2} sx={{ my: 2, p: 2 }}>\n//                         <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 2 }}>\n//                             Sales on {date}\n//                         </Typography>\n//                         <Divider sx={{ mb: 2 }} />\n//                         {groupedSales[date].map(sale => (\n//                         <ListItem \n//                             key={sale.id} \n//                             secondaryAction={\n//                                 <>\n//                                     <IconButton onClick={() => startEdit(sale)}><EditIcon /></IconButton>\n//                                     <IconButton onClick={() => deleteSale(sale.id)}><DeleteIcon /></IconButton>\n//                                 </>\n//                             }\n//                             sx={{ mb: 1 }}\n//                         >\n//                         <ListItemText\n//                             primary={`${sale.itemName} - $${sale.price}`}\n//                         secondary={`Category: ${sale.category} | Date: ${sale.date} | Payment Mode: ${sale.paymentMode}`}\n//                         />\n//                         </ListItem>\n//                     ))}\n\n//                     </Paper>\n//                 </React.Fragment>\n//             ))}\n//         </List>\n//     );\n// }\n\n// export default SaleList;\n\n\nimport React, { useContext } from 'react';\nimport { List, ListItem, ListItemText, IconButton, Typography, Divider, Paper } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { SalesContext } from './SalesContext';\n\nfunction SaleList() {\n    const { sales } = useContext(SalesContext);\n\n    // Function to group and sort sales by date\n    const groupedSales = sales.reduce((acc, sale) => {\n        const date = sale.date;\n        if (!acc[date]) {\n            acc[date] = [];\n        }\n        acc[date].push(sale);\n        return acc;\n    }, {});\n\n    const sortedDates = Object.keys(groupedSales).sort((a, b) => new Date(b) - new Date(a));\n\n    if (!sales || sales.length === 0) {\n        return <Typography>No sales data available.</Typography>;\n    }\n\n    return (\n        <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n            {sortedDates.map(date => (\n                <React.Fragment key={date}>\n                    <Typography variant=\"h6\" sx={{ mt: 4, mb: 2 }}>\n                        Sales on {date}\n                    </Typography>\n                    <Divider />\n                    {groupedSales[date].map((sale) => (\n                        <ListItem \n                            key={sale.id} \n                            secondaryAction={\n                                <>\n                                    <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => startEdit(sale)}>\n                                        <EditIcon />\n                                    </IconButton>\n                                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteSale(sale.id)}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </>\n                            }\n                        >\n                            <ListItemText\n                                primary={`${sale.itemName} - $${sale.price}`}\n                                secondary={`Category: ${sale.category || 'Not specified'} | Payment Mode: ${sale.paymentMode}`}\n                            />\n                        </ListItem>\n                    ))}\n                </React.Fragment>\n            ))}\n        </List>\n    );\n}\n\nexport default SaleList;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}